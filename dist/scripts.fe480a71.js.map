{"version":3,"sources":["scripts/helpers.js","data/card-issuers.json","scripts/issuerObjects.js","scripts/index.js"],"names":["appendElement","parent","elementType","className","content","element","document","createElement","classList","add","innerText","appendChild","clearChildren","firstChild","remove","module","exports","CARD_ISSUERS","name","prefixNumbers","lengths","image","testCards","_cardIssuers","_interopRequireDefault","require","obj","__esModule","default","data","_helpers","_issuerObjects","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","err","didErr","call","step","next","_e2","return","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","from","test","arr","len","arr2","RESULT_TEXT","querySelector","RESULT_CARD","CARD_INPUT","CARD_PROVIDER","INFORMATION_RESULTS","DEFAULT_CLASS","MIN_CARD_LENGTH","MAJOR_INDUSTRY_IDENTIFIERS","logResult","isValid","concat","checkCardNumber","cardNumber","style","backgroundImage","cardLength","firstDigit","charAt","checkSum","logIndustryCode","issuer","checkCardIssuer","logIssuer","changeDisplayedIssuer","logLengthForIssuer","card","digits","splitIntoDigits","reverseString","isTwoDigits","sumDigits","number","String","Number","_step","sum","_iterator","str","substr","industry","resultHeading","industryResult","_step2","cardString","_iterator2","_step3","_iterator3","prefixNumber","startsWith","prefix","_ref","issuerResult","_ref2","includes","join","_ref3","imagePath","addEventListener"],"mappings":"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","file":"scripts.fe480a71.js","sourceRoot":"..","sourcesContent":["\n//Append Element Helper\nfunction appendElement(parent, elementType, className, content) {\n    let element = document.createElement(elementType);\n    element.classList.add(className);\n    if (content) {\n      element.innerText = content;\n    }\n    parent.appendChild(element);\n    return element;\n  }\n\n  \n//Clear comments\nfunction clearChildren(element) {\n    while (element.firstChild) {\n      element.firstChild.remove();\n    }\n  }\n\n  export { appendElement, clearChildren };","module.exports={CARD_ISSUERS:[{name:\"American Express\",prefixNumbers:[34,37],lengths:[15],image:\"amex.png\",testCards:[371013685078853,371025821052618,371044577615551,371063732388250,371023510178422]},{name:\"Diner's Club\",prefixNumbers:[300,301,302,303,304,305,309,36,38,39],lengths:[14,15],image:\"diners.png\",testCards:[30190779777617,30036928610086,30491681460148,30342554667550,30418357445822]},{name:\"Discover\",prefixNumbers:[6011,64,65,622126,622925],lengths:[16],image:\"discover.png\",testCards:[6229252334306940,6566847776158625,6221260862065984,6522356782067278,6229256164820037]},{name:\"JCB\",prefixNumbers:[35,3088,3096,3112,3158,3337],lengths:[16],image:\"jcb.png\",testCards:[0xcadaa675b7b8f,0xc89b75588801c,0xcc00158d45c1f,0xc89a3774061d4,0xcbfcacdf68103]},{name:\"MasterCard\",prefixNumbers:[51,52,53,54,55],lengths:[16],image:\"mastercard.png\",testCards:[5215759402641238,5454084549356453,5424329355767195,5309413192083956,5273702266376144]},{name:\"Visa\",prefixNumbers:[4],lengths:[16,19],image:\"visa.png\",testCards:[4994467374088343,4960919014739529,4777608872459063,4833060294026470,4698923722383132]}]};","import data from \"../data/card-issuers.json\" assert { type: \"json\" };\n\n//Cards are Fake BTW ;)\nconst CARD_ISSUERS = data.CARD_ISSUERS;\n\nexport { CARD_ISSUERS };\n","import { appendElement, clearChildren } from \"./helpers.js\";\nimport { CARD_ISSUERS } from \"./issuerObjects.js\";\n\nconst RESULT_TEXT = document.querySelector(\".result-card__text\");\nconst RESULT_CARD = document.querySelector(\".result-card__container\");\nconst CARD_INPUT = document.querySelector(\".credit-card__input\");\nconst CARD_PROVIDER = document.querySelector(\".credit-card__provider-image\");\nconst INFORMATION_RESULTS = document.querySelector(\n  \".information-card__results\"\n);\n\nconst DEFAULT_CLASS = RESULT_CARD.classList.value;\nconst MIN_CARD_LENGTH = 12;\n\nconst MAJOR_INDUSTRY_IDENTIFIERS = {\n  0: \"ISO / TC 68 and other industry duties\",\n  1: \"Airlines\",\n  2: \"Airlines, finance, and other future industry duties\",\n  3: \"Travel and leisure\",\n  4: \"Banking and finance\",\n  5: \"Finance and banking\",\n  6: \"Sales and banking/finance\",\n  7: \"Petroleum and other future industry tasks\",\n  8: \"Healthcare, telecommunications, and other future industry tasks\",\n  9: \"For the appointment of national standards bodies\",\n};\n\n\nfunction logResult(isValid) {\n  RESULT_TEXT.innerText = isValid ? \"Valid card.\" : \"Invalid card.\";\n  RESULT_CARD.className = isValid\n    ? `${DEFAULT_CLASS}--valid`\n    : `${DEFAULT_CLASS}--invalid`;\n}\n\nfunction checkCardNumber() {\n  let cardNumber = this.value;\n  if (!(this.value.length >= MIN_CARD_LENGTH)) {\n    RESULT_TEXT.innerText = \"Please enter a card number above.\";\n    CARD_PROVIDER.style.backgroundImage = \"none\";\n    RESULT_CARD.className = DEFAULT_CLASS;\n    clearChildren(INFORMATION_RESULTS);\n    return;\n  }\n  let cardLength = cardNumber.length;\n  let firstDigit = cardNumber.charAt(0);\n  logResult(checkSum(cardNumber));\n  clearChildren(INFORMATION_RESULTS);\n  logIndustryCode(firstDigit);\n  let issuer = checkCardIssuer(cardNumber);\n  logIssuer(issuer);\n  changeDisplayedIssuer(issuer);\n  logLengthForIssuer(cardLength, issuer);\n}\n\nfunction checkSum(card) {\n  card = reverseString(card);\n  let digits = splitIntoDigits(card);\n\n  for (let i = 1; i < digits.length; i += 2) {\n    digits[i] *= 2;\n    if (isTwoDigits(digits[i])) {\n      digits[i] = sumDigits(digits[i]);\n    }\n  }\n  if (sumDigits(digits) % 10 === 0) {\n    return true;\n  }\n  return false;\n}\n\nfunction splitIntoDigits(number) {\n  return Array.from(String(number), Number);\n}\n\nfunction isTwoDigits(number) {\n  return number >= 10 && number <= 99;\n}\n\nfunction sumDigits(number) {\n  let digits;\n  let sum = 0;\n  if (Array.isArray(number)) {\n    digits = number;\n  } else {\n    digits = splitIntoDigits(number);\n  }\n  for (let digit of digits) {\n    sum += digit;\n  }\n  return sum;\n}\n\nfunction reverseString(str) {\n  return str === \"\" ? \"\" : reverseString(str.substr(1)) + str.charAt(0);\n}\n\nfunction logIndustryCode(number) {\n  let industry = MAJOR_INDUSTRY_IDENTIFIERS[number];\n  let resultHeading = `(MII) INDUSTRY CODE [${number}]: `;\n  let industryResult = appendElement(\n    INFORMATION_RESULTS,\n    \"p\",\n    \"information-card__subheading\",\n    resultHeading\n  );\n  appendElement(industryResult, \"span\", \"information-card__result\", industry);\n}\n\nfunction checkCardIssuer(number) {\n  let cardString = number.toString();\n  for (let issuer of CARD_ISSUERS) {\n    for (let prefixNumber of issuer.prefixNumbers) {\n      if (cardString.startsWith(prefixNumber.toString())) {\n        return {\n          name: issuer.name,\n          prefix: prefixNumber,\n          lengths: issuer.lengths,\n          image: issuer.image,\n        };\n      }\n    }\n  }\n  CARD_PROVIDER.style.backgroundImage = \"none\";\n  return { name: \"Unknown Issuer\", prefix: 0, lengths: null, image: null };\n}\n\nfunction logIssuer({ name, prefix }) {\n  if (prefix === 0) {\n    prefix = \"N/A\";\n  }\n  let resultHeading = `(IIN) ISSUER IDENTIFICATION NUMBER [${prefix}]: `;\n  let issuerResult = appendElement(\n    INFORMATION_RESULTS,\n    \"p\",\n    \"information-card__subheading\",\n    resultHeading\n  );\n  appendElement(issuerResult, \"span\", \"information-card__result\", name);\n}\n\nfunction logLengthForIssuer(length, { name, lengths }) {\n  if (!lengths) {\n    return;\n  }\n  if (lengths.includes(length)) {\n    return;\n  }\n  lengths = lengths.join(\", \");\n  RESULT_TEXT.innerText = `Expected length(s) for ${name}: ${lengths}.`;\n  RESULT_CARD.className = `${DEFAULT_CLASS}--invalid`;\n}\n\nfunction changeDisplayedIssuer({ image }) {\n  let imagePath = image;\n  if (imagePath === null) {\n    return;\n  }\n  CARD_PROVIDER.style.backgroundImage = `url(${imagePath})`;\n}\nCARD_INPUT.addEventListener(\"input\", checkCardNumber);\n"]}